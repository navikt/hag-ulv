meta {
  name: forespør inntektsmelding
  type: http
  seq: 4
}

patch {
  url: https://platform.tt02.altinn.no/dialogporten/api/v1/serviceowner/dialogs/{{dialogId}}
  body: json
  auth: none
}

body:json {
  [
    {
      "op": "add",
      "path": "/apiActions",
      "value": [
        {
          "name": "Send inn inntektsmelding",
          "action": "write",
          "endpoints": [
            {
              "url": "https://sykepenger-api.ekstern.dev.nav.no/v1/inntektsmelding",
              "httpMethod": "POST",
              "documentationUrl": "https://sykepenger-api.ekstern.dev.nav.no/swagger"
            }
          ]
        }
      ]
    },
    {
      "op": "add",
      "path": "/transmissions",
      "value": [
        {
          "id": "{{forespoerselTransmissionId}}",
          "type": "Request",
          "extendedType": "INNTEKTSMELDING",
          "externalReference": "{{eksempelForespoerselId}}",
          "sender": {
            "actorType": "ServiceOwner"
          },
          "content": {
            "title": {
              "value": [
                {
                  "value": "Forespørsel om inntektsmelding",
                  "languageCode": "nb"
                }
              ],
              "mediaType": "text/plain"
            }
          },
          "attachments": [
            {
              "displayName": [
                {
                  "value": "Inntektsmeldingforespoersel.json",
                  "languageCode": "nb"
                }
              ],
              "urls": [
                {
                  "url": "https://sykepenger-api.ekstern.dev.nav.no/v1/forespoersel/{{eksempelForespoerselId}}",
                  "mediaType": "application/json",
                  "consumerType": "Api"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

script:pre-request {
  const uuidV7 = () => {
    return 'tttttttt-tttt-7xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      const r = Math.trunc(Math.random() * 16);
      const v = c == 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    }).replace(/^[t]{8}-[t]{4}/, function() {
      const unixtimestamp = Date.now().toString(16).padStart(12, '0');
      return unixtimestamp.slice(0, 8) + '-' + unixtimestamp.slice(8);
    });
  }

  // Generer og sett transmission-id for forespørseltransmission, slik at vi senere kan opprette transmissions som refererer til denne.
  // Transmission-ider må være av typen UUID versjon 7
  bru.setVar('forespoerselTransmissionId', uuidV7());
}

tests {
  test("status code should be 204", function() {
    const statusCode = res.getStatus();
    expect(statusCode).to.equal(204);
  });
}
